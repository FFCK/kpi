name: '${APPLICATION_NAME}'
services:
    kpi:
        container_name: ${PHP_CONTAINER_NAME}
        build:
            context: ./config
            dockerfile: Dockerfile.dev.web
            args:
                USER_ID: ${USER_ID}
                GROUP_ID: ${GROUP_ID}
                BASE_IMAGE_PHP: ${BASE_IMAGE_PHP}
        user: ${USER_ID}:${GROUP_ID}
        ports:
            - 80${DOCKER_SUFFIXE_PORT}:80
        volumes:
            - ../sources:/var/www/html
            - ./MyParams.php:/var/www/html/commun/MyParams.php
            - ./MyConfig.php:/var/www/html/commun/MyConfig.php
            - ./config/opcache-dev.ini:/usr/local/etc/php/conf.d/opcache-dev.ini
            - ${HOST_APACHE2_LOG_PATH}:/var/log/apache2/
        networks:
            - network_kpi
            - traefiknetwork
        depends_on:
            - db
        logging:
            driver: "json-file"
            options:
                max-size: 10m
                max-file: 3
        restart: unless-stopped
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.kpi.rule=Host(`${KPI_DOMAIN_NAME}`)"
            - "traefik.http.routers.kpi.entrypoints=websecure"
            - "traefik.http.routers.kpi.tls=true"
    kpi8:
        container_name: ${PHP_CONTAINER_NAME}8
        build:
            context: ./config
            dockerfile: Dockerfile.dev.web
            args:
                USER_ID: ${USER_ID}
                GROUP_ID: ${GROUP_ID}
                BASE_IMAGE_PHP: ${BASE_IMAGE_PHP_8}
        user: ${USER_ID}:${GROUP_ID}
        ports:
            - 88${DOCKER_SUFFIXE_PORT}:80
        volumes:
            - ../sources:/var/www/html
            - ./MyParams.php:/var/www/html/commun/MyParams.php
            - ./MyConfig.php:/var/www/html/commun/MyConfig.php
            - ./config/opcache-dev.ini:/usr/local/etc/php/conf.d/opcache-dev.ini
            - ${HOST_APACHE2_LOG_PATH_8}:/var/log/apache2/
        networks:
            - network_kpi
            - traefiknetwork
        depends_on:
            - db
        logging:
            driver: "json-file"
            options:
                max-size: 10m
                max-file: 3
        restart: unless-stopped
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.kpi8.rule=Host(`${KPI_DOMAIN_NAME_8}`)"
            - "traefik.http.routers.kpi8.entrypoints=websecure"
            - "traefik.http.routers.kpi8.tls=true"
    db:
        container_name: ${DB_CONTAINER_NAME}
        build:
            context: ./config
            dockerfile: Dockerfile.db
            args:
                BASE_IMAGE_DB: ${BASE_IMAGE_DB}
        command: mysqld --sql_mode=""
        volumes:
            - ${HOST_DB_PATH}:/var/lib/mysql/
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_USER: ${DB_USER}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_NAME}
        # ports:
        #     - 33${DOCKER_SUFFIXE_PORT}:3306
        networks:
            - network_kpi
            - pma_network
        logging:
            driver: "json-file"
            options:
                max-size: 10m
                max-file: 3
        restart: unless-stopped
    dbwp:
        container_name: ${DBWP_CONTAINER_NAME}
        build:
            context: ./config
            dockerfile: Dockerfile.db
            args:
                BASE_IMAGE_DB: ${BASE_IMAGE_DB}
        volumes:
            - ${HOST_DBWP_PATH}:/var/lib/mysql/
        environment:
            MYSQL_ROOT_PASSWORD: ${DBWP_ROOT_PASSWORD}
            MYSQL_USER: ${DBWP_USER}
            MYSQL_PASSWORD: ${DBWP_PASSWORD}
            MYSQL_DATABASE: ${DBWP_NAME}
        # ports:
        #     - 33${DOCKER_SUFFIXE_PORT}:3306
        networks:
            - network_kpi
            - pma_network
        logging:
            driver: "json-file"
            options:
                max-size: 10m
                max-file: 3
        restart: unless-stopped
    node_app2:
        container_name: kpi_node_app2
        build:
            context: ../sources/app2
            dockerfile: ../../docker/node/Dockerfile # Cr√©e ce Dockerfile si besoin
        working_dir: /app
        user: "${USER_ID}:${GROUP_ID}"
        # command: "npm run http-server"
        volumes:
            - ../sources/app2:/app
        environment:
            - HOST=0.0.0.0
            - PORT=3000
        networks:
            - network_kpi
            - traefiknetwork
        ports:
            - "3002:3000"
        restart: unless-stopped
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.app2.rule=Host(`${NODE_DOMAIN_NAME}`)"
            - "traefik.http.routers.app2.entrypoints=websecure"
            - "traefik.http.routers.app2.tls=true"
            - "traefik.http.services.app2.loadbalancer.server.port=3000"
    
    # node:
    #     container_name: kpi_node
    #     # image: node:latest
    #     build:
    #         context: ../
    #         dockerfile: ./docker/node/Dockerfile
    #     ports:
    #         - "8000:8000" # vue ui
    #         - "9000:8080" # Vue-cli HMR
    #     volumes:
    #         - ../sources/app_dev:/app
    #     user: "1000:33"
    # node_live:
    #     container_name: kpi_node_live
    #     # image: node:latest
    #     build:
    #         context: ../
    #         dockerfile: ./docker/node/Dockerfile_live
    #     ports:
    #         - "8001:8000" # vue ui
    #         - "9001:8080" # Vue-cli HMR
    #     volumes:
    #         - ../sources/app_live_dev:/app
    #     user: "1000:33"
    # node_wsm:
    #     container_name: kpi_node_wsm
    #     # image: node:latest
    #     build:
    #         context: ../
    #         dockerfile: ./docker/node/Dockerfile_wsm
    #     ports:
    #         - "8002:8000" # vue ui
    #         - "9002:8080" # Vue-cli HMR
    #     volumes:
    #         - ../sources/app_wsm_dev:/app
    #     user: "1000:33"


networks:
    network_kpi:
        name: network_${APPLICATION_NAME}
        external: true
    pma_network:
        name: pma_network
        external: true
    traefiknetwork:
        name: traefiknetwork
        external: true
